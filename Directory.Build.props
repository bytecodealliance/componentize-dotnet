<Project>
    <PropertyGroup>
        <VersionPrefix>0.7.0</VersionPrefix>
        <VersionSuffix Condition="'$(BuildNumber)' == ''">dev</VersionSuffix>
        <VersionSuffix Condition="'$(BuildNumber)' != ''">preview$([System.String]::Format('{0:00000}', $([MSBuild]::Add($(BuildNumber), 0))))</VersionSuffix>
        <PackageVersion>$(VersionPrefix)-$(VersionSuffix)</PackageVersion>
        <PackageOutputPath>$(MSBuildThisFileDirectory)artifacts\</PackageOutputPath>
        <IsPackable>false</IsPackable>
        <NoWarn>$(NoWarn);NU1507</NoWarn>

        <!-- tool versions -->
        <WasmToolsVersion>1.227.1</WasmToolsVersion>
        <WacVersion>v0.6.1</WacVersion>
        <PrebuiltWitBindgenVersion>0.41.0</PrebuiltWitBindgenVersion>
        <PrebuildWkgVersion>0.10.0</PrebuildWkgVersion>

        <!-- test artifacts -->
        <WasmtimeVersion>30.0.2</WasmtimeVersion>

    </PropertyGroup>

    <UsingTask TaskName="ReplaceFileText" TaskFactory="RoslynCodeTaskFactory" AssemblyFile="$(MSBuildBinPath)\Microsoft.Build.Tasks.Core.dll">
        <ParameterGroup>
        <InputFilename ParameterType="System.String" Required="true" />
        <OutputFilename ParameterType="System.String" Required="true" />
        <MatchExpression ParameterType="System.String" Required="true" />
        <ReplacementText ParameterType="System.String" Required="true" />
        </ParameterGroup>
        <Task>
        <Using Namespace="System" />
        <Using Namespace="System.IO" />
        <Using Namespace="System.Text.RegularExpressions" />
        <Code Type="Fragment" Language="cs">
            <![CDATA[
            if (File.Exists(InputFilename))
            {
                string result = File.ReadAllText(InputFilename);
                var matches = MatchExpression.Split('|');
                var replacements = ReplacementText.Split('|');

                for (int i = 0; i < matches.Length; i++)
                {
                result = Regex.Replace(result, matches[i], replacements[i]);
                }

                File.WriteAllText(
                    OutputFilename,
                    "<!--\n    This code was generated by a tool.\n\n    Changes to this file may cause incorrect behavior and will be lost if\n    the code is regenerated.\n-->\n\n" +
                    result
                );
            }
            ]]>
        </Code>
        </Task>
    </UsingTask>

</Project>
