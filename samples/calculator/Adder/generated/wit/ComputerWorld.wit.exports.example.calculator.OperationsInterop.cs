// Generated by `wit-bindgen` 0.41.0. DO NOT EDIT!
// <auto-generated />
#nullable enable

using System.Text;
using System.Runtime.InteropServices;

namespace ComputerWorld.wit.exports.example.calculator
{
    public static class OperationsInterop {

        [UnmanagedCallersOnly(EntryPoint = "example:calculator/operations#add")]
        public static unsafe int wasmExportAdd(int p0, int p1) {

            int ret;
            ret = OperationsImpl.Add((p0), (p1));
            return ret;

        }

        [UnmanagedCallersOnly(EntryPoint = "example:calculator/operations#to-upper")]
        public static unsafe nint wasmExportToUpper(nint p0, int p1) {

            string ret;
            ret = OperationsImpl.ToUpper((Encoding.UTF8.GetString((byte*)p0, p1)));

            var ptr = InteropReturnArea.returnArea.AddressOfReturnArea();

            var stringSpan = ret.AsSpan();
            var length = Encoding.UTF8.GetByteCount(stringSpan);
            var strPtr = NativeMemory.Alloc((nuint)length);
            Encoding.UTF8.GetBytes(stringSpan, new Span<byte>(strPtr, length));

            BitConverter.TryWriteBytes(new Span<byte>((void*)(ptr + 4), 4), length);
            BitConverter.TryWriteBytes(new Span<byte>((void*)(ptr + 0), 4), (int)strPtr);
            return ptr;

        }

        [UnmanagedCallersOnly(EntryPoint = "cabi_post_example:calculator/operations#to-upper")]
        public static unsafe void cabi_post_wasmExportToUpper(nint p0) {
            NativeMemory.Free((void*)BitConverter.ToInt32(new Span<byte>((void*)(p0 + 0), 4)));

        }

        [UnmanagedCallersOnly(EntryPoint = "example:calculator/operations#get-repo")]
        public static unsafe nint wasmExportGetRepo(nint p0, int p1, nint p2, int p3) {

            string ret;
            ret = OperationsImpl.GetRepo((Encoding.UTF8.GetString((byte*)p0, p1)), (Encoding.UTF8.GetString((byte*)p2, p3)));

            var ptr = InteropReturnArea.returnArea.AddressOfReturnArea();

            var stringSpan = ret.AsSpan();
            var length = Encoding.UTF8.GetByteCount(stringSpan);
            var strPtr = NativeMemory.Alloc((nuint)length);
            Encoding.UTF8.GetBytes(stringSpan, new Span<byte>(strPtr, length));

            BitConverter.TryWriteBytes(new Span<byte>((void*)(ptr + 4), 4), length);
            BitConverter.TryWriteBytes(new Span<byte>((void*)(ptr + 0), 4), (int)strPtr);
            return ptr;

        }

        [UnmanagedCallersOnly(EntryPoint = "cabi_post_example:calculator/operations#get-repo")]
        public static unsafe void cabi_post_wasmExportGetRepo(nint p0) {
            NativeMemory.Free((void*)BitConverter.ToInt32(new Span<byte>((void*)(p0 + 0), 4)));

        }

    }
}
