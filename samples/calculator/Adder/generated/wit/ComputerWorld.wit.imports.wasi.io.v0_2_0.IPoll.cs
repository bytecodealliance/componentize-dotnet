// Generated by `wit-bindgen` 0.41.0. DO NOT EDIT!
// <auto-generated />
#nullable enable

using System.Runtime.InteropServices;

namespace ComputerWorld.wit.imports.wasi.io.v0_2_0;

public interface IPoll {

    public class Pollable: IDisposable {
        internal int Handle { get; set; }

        public readonly record struct THandle(int Handle);

        public Pollable(THandle handle) {
            Handle = handle.Handle;
        }

        public void Dispose() {
            Dispose(true);
        }

        [DllImport("wasi:io/poll@0.2.0", EntryPoint = "[resource-drop]pollable"), WasmImportLinkage]
        private static extern void wasmImportResourceDrop(int p0);

        protected virtual void Dispose(bool disposing) {
            if (disposing && Handle != 0) {
                wasmImportResourceDrop(Handle);
                Handle = 0;
            }
        }

        internal static class ReadyWasmInterop
        {
            [DllImport("wasi:io/poll@0.2.0", EntryPoint = "[method]pollable.ready"), WasmImportLinkage]
            internal static extern int wasmImportReady(int p0);
        }

        public   unsafe bool Ready()
        {
            var handle = this.Handle;
            var result =  ReadyWasmInterop.wasmImportReady(handle);
            return (result != 0);

        }

        internal static class BlockWasmInterop
        {
            [DllImport("wasi:io/poll@0.2.0", EntryPoint = "[method]pollable.block"), WasmImportLinkage]
            internal static extern void wasmImportBlock(int p0);
        }

        public   unsafe void Block()
        {
            var handle = this.Handle;
            BlockWasmInterop.wasmImportBlock(handle);

        }

    }

}
