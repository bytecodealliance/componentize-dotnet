<Project Sdk="Microsoft.NET.Sdk">

    <!-- This project can't be included in the solution because its package reference can't be satisfied except when running under test -->

    <PropertyGroup>
        <OutputType>Exe</OutputType>
        <TargetFramework>net10.0</TargetFramework>
        <ImplicitUsings>enable</ImplicitUsings>
        <Nullable>enable</Nullable>
        <ManagePackageVersionsCentrally>false</ManagePackageVersionsCentrally>

        <InvariantGlobalization>true</InvariantGlobalization>
        <RuntimeIdentifier>wasi-wasm</RuntimeIdentifier>
        <UseAppHost>false</UseAppHost>
        <PublishTrimmed>true</PublishTrimmed>
        <TargetName>e2econsumer</TargetName>
        <WitBindgenAddtionalArgs>--features float-add</WitBindgenAddtionalArgs>
    </PropertyGroup>

    <ItemGroup>
        <PackageReference Include="BytecodeAlliance.Componentize.DotNet.Wasm.SDK" Version="$(PackageVersion)" />
        <PackageReference Include="runtime.$(NETCoreSdkPortableRuntimeIdentifier).Microsoft.DotNet.ILCompiler.LLVM" Version="10.0.0-preview.2.25455.1"/>

        <!-- Just to ensure build order -->
        <ProjectReference Include="..\E2EProducer\E2EProducer.csproj" ReferenceOutputAssembly="false" />
    </ItemGroup>

    <ItemGroup>
        <Wit Include="..\E2EProducer\producer-consumer.wit" World="consumer" />
    </ItemGroup>
    
    <!-- After build, create the composed component so it can be executed in the test -->
    <Target Name="ComposeWasmComponent" AfterTargets="Publish">
        <PropertyGroup>
            <DependencyComponent>../E2EProducer/bin/$(Configuration)/$(TargetFramework)/wasi-wasm/native/e2eproducer.wasm</DependencyComponent>
        </PropertyGroup>

        <MakeDir Directories="dist" />
        <Exec Command="$(WacExe) plug $(NativeOutputPath)$(TargetName.ToLower()).wasm --plug $(DependencyComponent) -o dist/composed.wasm" />
    </Target>

</Project>
