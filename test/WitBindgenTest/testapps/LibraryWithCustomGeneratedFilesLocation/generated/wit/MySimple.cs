// Generated by `wit-bindgen` 0.46.0. DO NOT EDIT!
// <auto-generated />
#nullable enable

namespace MySimpleWorld {

    public interface IMySimpleWorld {
        static abstract int GetNumber();

    }

    public readonly struct None {}

    [global::System.Runtime.InteropServices.StructLayoutAttribute(global::System.Runtime.InteropServices.LayoutKind.Sequential)]
    public readonly struct Result<TOk, TErr>
    {
        public readonly byte Tag;
        private readonly object value;

        private Result(byte tag, object value)
        {
            Tag = tag;
            this.value = value;
        }

        public static Result<TOk, TErr> Ok(TOk ok)
        {
            return new Result<TOk, TErr>(Tags.Ok, ok!);
        }

        public static Result<TOk, TErr> Err(TErr err)
        {
            return new Result<TOk, TErr>(Tags.Err, err!);
        }

        public bool IsOk => Tag == Tags.Ok;
        public bool IsErr => Tag == Tags.Err;

        public TOk AsOk
        {
            get
            {
                if (Tag == Tags.Ok)
                {
                    return (TOk)value;
                }

                throw new global::System.ArgumentException("expected k, got " + Tag);
            }
        }

        public TErr AsErr
        {
            get
            {
                if (Tag == Tags.Err)
                {
                    return (TErr)value;
                }

                throw new global::System.ArgumentException("expected Err, got " + Tag);
            }
        }

        public class Tags
        {
            public const byte Ok = 0;
            public const byte Err = 1;
        }
    }

    namespace exports {
        public static class MySimpleWorld
        {

            [global::System.Runtime.InteropServices.UnmanagedCallersOnlyAttribute(EntryPoint = "get-number")]
            public static unsafe int wasmExportGetNumber() {

                int ret;
                ret = MySimpleWorldImpl.GetNumber();
                return ret;

            }

        }
    }

}
